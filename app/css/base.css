* {
  margin: 0;
  padding: 0;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-text-size-adjust: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  -moz-user-select: none;
       user-select: none;
  font-family: Arial, 'Microsoft YaHei';
}
img {
  vertical-align: top;
  border: none;
}
input,
textarea {
  -webkit-user-select: text;
  -ms-user-select: text;
  -moz-user-select: text;
       user-select: text;
  -webkit-appearance: none;
}
input:focus,
select:focus,
textarea:focus,
button:focus {
  outline: none;
}
input[type="text"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="number"],
input[type="email"],
input[type="url"],
textarea {
  -webkit-appearance: none;
  border: 1px solid;
  border-radius: 0;
}
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}
a {
  text-decoration: none;
  -webkit-touch-callout: none;
}
em,
i {
  font-style: normal;
}
li {
  list-style: none;
}
html,
body {
  height: 100%;
}
html {
  font-size: 10px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UubGVzcyIsImNvbW1vbi5sZXNzIiwiYmFzZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxVQUFBO0VBQ0EsV0FBQTtFQUVBLDhDQUFBO0VBRUEsK0JBQUE7RUNtS0EsMEJBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO09BQUEsa0JBQUE7RURsS0Esc0NBQUE7Q0VESDtBRklEO0VBQ0ksb0JBQUE7RUFDQSxhQUFBO0NFRkg7QUZLRDs7RUN3SkksMEJBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO09BQUEsa0JBQUE7RUR2SkEseUJBQUE7Q0VESDtBRklEOzs7O0VBQ0ksY0FBQTtDRUNIO0FGRUQ7Ozs7Ozs7O0VBQ0kseUJBQUE7RUFDQSxrQkFBQTtFQzhEQSxpQkFBQTtDQ3JESDtBRkxEO0VBQ0kseUJBQUE7Q0VPSDtBRkxEO0VBQ0ksc0JBQUE7RUFFQSw0QkFBQTtDRU1IO0FGSkQ7O0VBQ0ksbUJBQUE7Q0VPSDtBRkxEO0VBQ0ksaUJBQUE7Q0VPSDtBRkxEOztFQUNJLGFBQUE7Q0VRSDtBRkxEO0VBQ0ksZ0JBQUE7Q0VPSCIsImZpbGUiOiJiYXNlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ2NvbW1vbi5sZXNzJztcbip7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgLy8g6Ziy5q2i54K55Ye76Zeq54OBXG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOnJnYmEoMCwwLDAsMCk7XG4gICAgLy8g57yp5pS+572R6aG177yM5paH5a2X5aSn5bCP5LiN5Y+YXG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0Om5vbmU7XG4gICAgLy8g56aB5q2i6YCJ5oupXG4gICAgLnVzZXItc2VsZWN0KG5vbmUpO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwnTWljcm9zb2Z0IFlhSGVpJztcbn1cbi8vIOS/ruWkjWltZ+m7mOiupOS9jee9ruWSjElF6L655qGGXG5pbWd7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBib3JkZXI6bm9uZTtcbn1cbi8vIOWFgeiuuOihqOWNlemAieaLqVxuaW5wdXQsdGV4dGFyZWF7XG4gICAgLnVzZXItc2VsZWN0KCk7XG4gICAgLy8g57Sn5oCl5aSE55CG5LmL5YmN6aG555uuYnVn77yM5b6F5pS56L+bXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7XG59XG4vLyDljrvpmaTomZrnur9cbmlucHV0OmZvY3VzLHNlbGVjdDpmb2N1cyx0ZXh0YXJlYTpmb2N1cyxidXR0b246Zm9jdXN7XG4gICAgb3V0bGluZTogbm9uZTtcbn1cbi8vIOmHjee9rumDqOWIhuihqOWNleWchuinkuWSjOWGhemYtOW9sVxuaW5wdXRbdHlwZT1cInRleHRcIl0saW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLGlucHV0W3R5cGU9XCJzZWFyY2hcIl0saW5wdXRbdHlwZT1cInRlbFwiXSxpbnB1dFt0eXBlPVwibnVtYmVyXCJdLGlucHV0W3R5cGU9XCJlbWFpbFwiXSxpbnB1dFt0eXBlPVwidXJsXCJdLHRleHRhcmVhe1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTpub25lO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xuICAgIC5yYWRpdXMoMCk7XG59XG4vLyDljrvpmaTmlofmnKzmoYbkuIrkuIvnrq3lpLRcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b257XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7XG59XG5he1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAvLyBpb3PnpoHmraLpobXpnaLlnKjmlrDnqpflj6PmiZPlvIBcbiAgICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6bm9uZTtcbn1cbmVtLGl7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxubGl7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbmh0bWwsYm9keXtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG4vLyDph43nva7mloflrZfliJ3lp4sxMHB4XG5odG1se1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuXG4iLCIvLyBA57u05oqk5Lq677ya5byg6IiqXG5cbi8vIENTUzPliY3nvIBcbi5kaXNwbGF5KC4uLil7XG4gICAgZGlzcGxheTogQGFyZ3VtZW50cztcbn1cbi5kaXNwbGF5KEB2YWx1ZSl3aGVuKEB2YWx1ZT1mbGV4KXtcbiAgICBkaXNwbGF5Oi13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6LXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6LW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTpAdmFsdWU7XG59XG4uZGlzcGxheShAdmFsdWUpd2hlbihAdmFsdWU9aW5saW5lLWZsZXgpe1xuICAgIGRpc3BsYXk6LXdlYmtpdC1pbmxpbmUtYm94O1xuICAgIGRpc3BsYXk6LXdlYmtpdC1pbmxpbmUtZmxleDtcbiAgICBkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveDtcbiAgICBkaXNwbGF5OkB2YWx1ZTtcbn1cbi5mbGV4KEB2OjEpe1xuICAgIC13ZWJraXQtYm94LWZsZXg6QHY7XG4gICAgLXdlYmtpdC1mbGV4OkB2O1xuICAgIC1tcy1mbGV4OkB2O1xuICAgIGZsZXg6QHY7XG59XG4vLyDpu5jorqTliqB3ZWJraXTliY3nvIBcbi5jc3MtcHJlZml4KEBwcm9wZXJ0eSxAdmFsdWUpe1xuICAgIC13ZWJraXQtQHtwcm9wZXJ0eX06QHZhbHVlO1xuICAgIEB7cHJvcGVydHl9OkB2YWx1ZTtcbn1cbi8vIHJvdyB8IGNvbHVtbiB8IHJvdy1yZXZlcnNlXG4vLyDpu5jorqTlgLzvvJpjb2x1bW5cbi5mbGV4LWRpcmVjdGlvbihAdmFsdWUpd2hlbihAdmFsdWU9cm93KXtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246QHZhbHVlO1xuICAgIC5jc3MtcHJlZml4KGJveC1vcmllbnQsaG9yaXpvbnRhbCk7XG4gICAgLmNzcy1wcmVmaXgoZmxleC1kaXJlY3Rpb24sQHZhbHVlKTtcbn1cbi5mbGV4LWRpcmVjdGlvbihAdmFsdWU6Y29sdW1uKXdoZW4oZGVmYXVsdCgpKXtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246QHZhbHVlO1xuICAgIC5jc3MtcHJlZml4KGJveC1vcmllbnQsdmVydGljYWwpO1xuICAgIC5jc3MtcHJlZml4KGZsZXgtZGlyZWN0aW9uLEB2YWx1ZSk7XG59XG4uZmxleC1kaXJlY3Rpb24oQHZhbHVlKXdoZW4oQHZhbHVlPXJvdy1yZXZlcnNlKXtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246QHZhbHVlO1xuICAgIC5jc3MtcHJlZml4KGJveC1kaXJlY3Rpb24scmV2ZXJzZSk7XG4gICAgLmNzcy1wcmVmaXgoZmxleC1kaXJlY3Rpb24sQHZhbHVlKTtcbn1cbi8vIGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IHNwYWNlLWJldHdlZW5cbi8vIOm7mOiupOWAvO+8mmNlbnRlclxuLmp1c3RpZnktY29udGVudChAdmFsdWUpd2hlbihAdmFsdWU9ZmxleC1zdGFydCl7XG4gICAgLW1zLWZsZXgtcGFjazpzdGFydDtcbiAgICAuY3NzLXByZWZpeChib3gtcGFjayxzdGFydCk7XG4gICAgLmNzcy1wcmVmaXgoanVzdGlmeS1jb250ZW50LEB2YWx1ZSk7XG59XG4uanVzdGlmeS1jb250ZW50KEB2YWx1ZSl3aGVuKEB2YWx1ZT1mbGV4LWVuZCl7XG4gICAgLW1zLWZsZXgtcGFjazplbmQ7XG4gICAgLmNzcy1wcmVmaXgoYm94LXBhY2ssZW5kKTtcbiAgICAuY3NzLXByZWZpeChqdXN0aWZ5LWNvbnRlbnQsQHZhbHVlKTtcbn1cbi5qdXN0aWZ5LWNvbnRlbnQoQHZhbHVlOmNlbnRlcil3aGVuKGRlZmF1bHQoKSl7XG4gICAgLW1zLWZsZXgtcGFjazpAdmFsdWU7XG4gICAgLmNzcy1wcmVmaXgoYm94LXBhY2ssQHZhbHVlKTtcbiAgICAuY3NzLXByZWZpeChqdXN0aWZ5LWNvbnRlbnQsQHZhbHVlKTtcbn1cbi5qdXN0aWZ5LWNvbnRlbnQoQHZhbHVlKXdoZW4oQHZhbHVlPXNwYWNlLWJldHdlZW4pe1xuICAgIC1tcy1mbGV4LXBhY2s6anVzdGlmeTtcbiAgICAuY3NzLXByZWZpeChib3gtcGFjayxqdXN0aWZ5KTtcbiAgICAuY3NzLXByZWZpeChqdXN0aWZ5LWNvbnRlbnQsQHZhbHVlKTtcbn1cbi8vIGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IHN0cmV0Y2hcbi8vIOm7mOiupOWAvO+8mmNlbnRlclxuLmFsaWduLWl0ZW1zKEB2YWx1ZSl3aGVuKEB2YWx1ZT1mbGV4LXN0YXJ0KXtcbiAgICAtbXMtZmxleC1hbGlnbjpzdGFydDtcbiAgICAuY3NzLXByZWZpeChib3gtYWxpZ24sc3RhcnQpO1xuICAgIC5jc3MtcHJlZml4KGFsaWduLWl0ZW1zLEB2YWx1ZSk7XG59XG4uYWxpZ24taXRlbXMoQHZhbHVlKXdoZW4oQHZhbHVlPWZsZXgtZW5kKXtcbiAgICAtbXMtZmxleC1hbGlnbjplbmQ7XG4gICAgLmNzcy1wcmVmaXgoYm94LWFsaWduLGVuZCk7XG4gICAgLmNzcy1wcmVmaXgoYWxpZ24taXRlbXMsQHZhbHVlKTtcbn1cbi5hbGlnbi1pdGVtcyhAdmFsdWU6Y2VudGVyKXdoZW4oZGVmYXVsdCgpKXtcbiAgICAtbXMtZmxleC1hbGlnbjpAdmFsdWU7XG4gICAgLmNzcy1wcmVmaXgoYm94LWFsaWduLEB2YWx1ZSk7XG4gICAgLmNzcy1wcmVmaXgoYWxpZ24taXRlbXMsQHZhbHVlKTtcbn1cbi5hbGlnbi1pdGVtcyhAdmFsdWUpd2hlbihAdmFsdWU9c3RyZXRjaCl7XG4gICAgLW1zLWZsZXgtYWxpZ246QHZhbHVlO1xuICAgIC5jc3MtcHJlZml4KGJveC1hbGlnbixAdmFsdWUpO1xuICAgIC5jc3MtcHJlZml4KGFsaWduLWl0ZW1zLEB2YWx1ZSk7XG59XG4ucmFkaXVzKEB4OjVweCl7XG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiBAeDtcbiAgICBib3JkZXItcmFkaXVzOiBAeDtcbn1cbi5ib3gtc2hhZG93KEBzaGFkb3c6MCAwIDVweCAjY2NjKXtcbiAgICBib3gtc2hhZG93OkBzaGFkb3c7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OkBzaGFkb3c7XG59XG4uYm94LXNpemluZyhAc3R5bGU6Ym9yZGVyLWJveCl7XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBAc3R5bGU7XG4gICAgYm94LXNpemluZzpAc3R5bGU7XG59XG4udHJhbnNmb3JtLW9yaWdpbiguLi4pe1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjpAYXJndW1lbnRzO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46QGFyZ3VtZW50cztcbn1cbi50cmFuc2Zvcm0oQGFyZyl7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06QGFyZztcbiAgICAtbXMtdHJhbnNmb3JtOkBhcmc7XG4gICAgdHJhbnNmb3JtOkBhcmc7XG59XG4vLyDovazmjaLvvIzov57lhplcbi8vIC50cmFuc2Zvcm0ocm90YXRlKDQ1ZGVnKSBzY2FsZSguNSk7am9pbik7XG4udHJhbnNmb3JtKEBhcmc7QGpvaW4pd2hlbihAam9pbj1qb2luKXtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTpAYXJnO1xuICAgIHRyYW5zZm9ybTpAYXJnO1xufVxuLnRyYW5zbGF0ZShAeDowOyBAeTowKXtcbiAgICAudHJhbnNmb3JtKHRyYW5zbGF0ZShAeCwgQHkpKTtcbn1cbi50cmFuc2xhdGUzZChAeDowOyBAeTowOyBAejowKXtcbiAgICAudHJhbnNmb3JtKHRyYW5zbGF0ZTNkKEB4LCBAeSwgQHopKTtcbn1cbi5yb3RhdGUoQGRlZ3JlZTowKXtcbiAgICAudHJhbnNmb3JtKHJvdGF0ZShAZGVncmVlKSk7XG59XG4ucm90YXRlM2QoQHg6MDsgQHk6MDsgQHo6MDsgQGRlZ3JlZTowKXtcbiAgICAudHJhbnNmb3JtKHJvdGF0ZTNkKEB4LCBAeSwgQHosIEBkZWdyZWUpKTtcbn1cbi5zY2FsZShAbnVtOjEpe1xuICAgIC50cmFuc2Zvcm0oc2NhbGUoQG51bSkpO1xufVxuLnNjYWxlM2QoQHg6MTsgQHk6MTsgQHo6MSl7XG4gICAgLnRyYW5zZm9ybShzY2FsZTNkKEB4LCBAeSwgQHopKTtcbn1cbi5za2V3KEB4OjA7IEB5OjApe1xuICAgIC50cmFuc2Zvcm0oc2tldyhAeCwgQHkpKTtcbn1cbi8vIOi/h+a4oVxuLy8gLnRyYW5zaXRpb24oYWxsIDAuNXMgZWFzZSk7XG4vLyAudHJhbnNpdGlvbih2aXNpYmlsaXR5LG9wYWNpdHkgMC41czspO1xuLy8gLnRyYW5zaXRpb24odHJhbnNmb3JtIDAuNXM7dHJ1ZSk7XG4udHJhbnNpdGlvbihAYXJnKXtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246QGFyZztcbiAgICB0cmFuc2l0aW9uOkBhcmc7XG59XG4udHJhbnNpdGlvbihAYXJnO0BwcmVmaXgpd2hlbihAcHJlZml4PXRydWUpe1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjplKFwiLXdlYmtpdC1Ae2FyZ31cIik7XG4gICAgdHJhbnNpdGlvbjpAYXJnO1xufVxuLy8g57q/5oCn5riQ5Y+YXG4vLyDop6PlhrPop5LluqbkuLow5pe25rKh5pyJ5YqgZGVn55qEYnVnXG4ubGluZWFyLWdyYWRpZW50KEBkZWdyZWU7IEBjb2xvcnMpd2hlbihAZGVncmVlPTApe1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KEBkZWdyZWUsQGNvbG9ycyk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogLW1zLWxpbmVhci1ncmFkaWVudChAZGVncmVlLEBjb2xvcnMpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg5MGRlZyxAY29sb3JzKTtcbn1cbi8vIOe6v+aAp+a4kOWPmFxuLy8gLmxpbmVhci1ncmFkaWVudCg2MGRlZzsgIzAwMCwgI2ZmZik7XG4ubGluZWFyLWdyYWRpZW50KEBkZWdyZWU7IEBjb2xvcnMpd2hlbihkZWZhdWx0KCkpe1xuICAgIEBkZWdyZWVXM2MgOiBhYnMoQGRlZ3JlZSkgKyA5MDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChAZGVncmVlLEBjb2xvcnMpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1tcy1saW5lYXItZ3JhZGllbnQoQGRlZ3JlZSxAY29sb3JzKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoQGRlZ3JlZVczYyxAY29sb3JzKTtcbn1cbi5hbmltYXRpb24oLi4uKXtcbiAgICAtd2Via2l0LWFuaW1hdGlvbjpAYXJndW1lbnRzO1xuICAgIGFuaW1hdGlvbjpAYXJndW1lbnRzO1xufVxuLnVzZXItc2VsZWN0KEBzZWxlY3Q6IHRleHQpe1xuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6QHNlbGVjdDtcbiAgICAtbXMtdXNlci1zZWxlY3Q6QHNlbGVjdDtcbiAgICB1c2VyLXNlbGVjdDpAc2VsZWN0O1xufVxuXG4vLyDnroDlhplcbi5jbGVhcmZpeCgpe1xuICAgICY6YWZ0ZXJ7XG4gICAgICAgIGNvbnRlbnQ6XCJcIjtcbiAgICAgICAgZGlzcGxheTp0YWJsZTtcbiAgICAgICAgY2xlYXI6Ym90aDtcbiAgICB9XG59XG4uZWxsaXBzaXMoKXtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzplbGxpcHNpcztcbn1cbi8vIHBhZGRpbmfmr5TkvovnvKnmlL5cbi8vIC5wYWRkaW5nLXByb3BvcigyLzMpO1xuLnBhZGRpbmctcHJvcG9yKEBhcmc6MSl7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6YWZ0ZXJ7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHBhZGRpbmctdG9wOiBwZXJjZW50YWdlKEBhcmcpO1xuICAgIH1cbn1cbi8vIOWqkuS9k+afpeivouaUueWPmGh0bWzlrZflj7dyZW3vvIzliY3pnaLmmK/lsY/luZXlsLrlr7jvvIzlkI7pnaLmmK/lrZflj7dcbi8vIC5tZWRpYS1yZW0oMzIwcHg7MTAwcHgpO1xuLm1lZGlhLXJlbShAd2lkdGg6MzIwcHg7IEBodG1sU2l6ZToxMHB4KXtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogQHdpZHRoKXtcbiAgICAgICAgZm9udC1zaXplOiBAd2lkdGggLyAoMzIwL0BodG1sU2l6ZSk7XG4gICAgfVxufVxuXG4vLyDlup/lvIPvvIznpoHmraLkvb/nlKhcbi5lbGwoKXtcbiAgICAuZWxsaXBzaXMoKTtcbn1cbi5mbGV4Ym94KCl7XG4gICAgZGlzcGxheTotd2Via2l0LWJveDtcbiAgICBkaXNwbGF5Oi13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5Oi1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6ZmxleDtcbn1cbi5mbGV4Ym94X2NvbHVtbigpe1xuICAgIC13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcbn1cbi5mbGV4Ym94X2NlbnRlcigpe1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbn1cbi5ncmFkaWVudChAcGF0aDsgQGNvbG9yWDsgQGNvbG9yWSl7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoQHBhdGgsIEBjb2xvclgsIEBjb2xvclkpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6LW1zLWxpbmVhci1ncmFkaWVudChAcGF0aCwgQGNvbG9yWCwgQGNvbG9yWSk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KEBwYXRoLCBAY29sb3JYLCBAY29sb3JZKTtcbn0iLCIqIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCAnTWljcm9zb2Z0IFlhSGVpJztcbn1cbmltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIGJvcmRlcjogbm9uZTtcbn1cbmlucHV0LFxudGV4dGFyZWEge1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiB0ZXh0O1xuICAtbXMtdXNlci1zZWxlY3Q6IHRleHQ7XG4gIHVzZXItc2VsZWN0OiB0ZXh0O1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5pbnB1dDpmb2N1cyxcbnNlbGVjdDpmb2N1cyxcbnRleHRhcmVhOmZvY3VzLFxuYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSxcbmlucHV0W3R5cGU9XCJ0ZWxcIl0sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuaW5wdXRbdHlwZT1cInVybFwiXSxcbnRleHRhcmVhIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBib3JkZXI6IDFweCBzb2xpZDtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbn1cbmVtLFxuaSB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbmxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cbmh0bWwsXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cbiJdfQ== */
